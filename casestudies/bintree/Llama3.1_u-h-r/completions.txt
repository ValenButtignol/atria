
```java
package casestudies.bintree;

public class BinTree {
    private Node root;
    private int size = 0;

    public void add(int x) {
        if (root == null) {
            root = new Node(x);
            size++;
        } else {
            addRecursive(root, x);
        }
    }

    private void addRecursive(Node current, int x) {
        if (x == current.info) {
            return;
        } else if (x < current.info) {
            if (current.left == null) {
                current.left = new Node(x);
                size++;
            } else {
                addRecursive(current.left, x);
            }
        } else {
            if (current.right == null) {
                current.right = new Node(x);
                size++;
            } else {
                addRecursive(current.right, x);
            }
        }
    }

    public int getSize() {
        return size;
    }

    public boolean repOK() {
        return root == null || repOKRecursive(root);
    }

    private boolean repOKRecursive(Node current) {
        if (current == null) {
            return true;
        }
        if (current.left != null && current.info <= current.left.info) {
            return false;
        }
        if (current.right != null && current.info >= current.right.info) {
            return false;
        }
        return repOKRecursive(current.left) && repOKRecursive(current.right);
    }

    public static class Node {
        private Node left; 
        private Node right;
        private int info;

        public Node(int info) {
            this.info = info;
        }
    }
}
```
