
```java
public boolean repOK() {
    if (root == null) {
        return true; // An empty tree is trivially balanced
    }

    return isBalanced(root) && isBST(root, Integer.MIN_VALUE, Integer.MAX_VALUE);
}

private boolean isBalanced(AvlNode node) {
    if (node == null) {
        return true;
    }

    int leftHeight = height(node.left);
    int rightHeight = height(node.right);

    if (Math.abs(leftHeight - rightHeight) > ALLOWED_IMBALANCE) {
        return false;
    }

    return isBalanced(node.left) && isBalanced(node.right);
}

private boolean isBST(AvlNode node, int min, int max) {
    if (node == null) {
        return true;
    }

    if (node.element <= min || node.element >= max) {
        return false;
    }

    return isBST(node.left, min, node.element) && isBST(node.right, node.element, max);
}
```
