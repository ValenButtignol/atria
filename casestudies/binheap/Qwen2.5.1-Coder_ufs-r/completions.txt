
```java
public boolean repOK() {
    if (Nodes == null && size == 0) {
        return true;
    }

    if (Nodes == null || size == 0) {
        return false;
    }

    if (size != Nodes.size()) {
        return false;
    }

    if (!isAcyclic()) {
        return false;
    }

    if (!isMinHeapProperty()) {
        return false;
    }

    return true;
}

private boolean isAcyclic() {
    Set<BinomialHeapNode> visited = new HashSet<>();
    return isAcyclicHelper(Nodes, visited);
}

private boolean isAcyclicHelper(BinomialHeapNode node, Set<BinomialHeapNode> visited) {
    if (node == null) {
        return true;
    }

    if (!visited.add(node)) {
        return false;
    }

    return isAcyclicHelper(node.child, visited) && isAcyclicHelper(node.sibling, visited);
}

private boolean isMinHeapProperty() {
    return isMinHeapPropertyHelper(Nodes);
}

private boolean isMinHeapPropertyHelper(BinomialHeapNode node) {
    if (node == null) {
        return true;
    }

    if (node.child != null && node.key > node.child.key) {
        return false;
    }

    return isMinHeapPropertyHelper(node.sibling) && isMinHeapPropertyHelper(node.child);
}
```
